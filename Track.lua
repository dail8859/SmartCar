require "Vector"

local Track = {}

local track_data =
{
	["angle"] = 0,
	["angularVelocity"] = 0,
	["awake"] = true,
	["fixture"] = 
	{
		{
			["chain"] = 
			{
				["hasNextVertex"] = true,
				["hasPrevVertex"] = true,
				["nextVertex"] = 
				{
					["x"] = -150.22500610352,
					["y"] = 103.96868133545
				},
				["prevVertex"] = 
				{
					["x"] = -143.41494750977,
					["y"] = 42.932601928711
				},
				["vertices"] = 
				{
					["x"] = 
					{
						-142.3851776123,
						-150.22500610352,
						-161.00778198242,
						-181.12916564941,
						-207.45372009277,
						-229.95826721191,
						-282.42749023438,
						-333.69064331055,
						-349.72396850586,
						-362.78469848633,
						-376.17294311523,
						-392.81414794922,
						-413.16912841797,
						-458.30844116211,
						-474.90057373047,
						-493.23675537109,
						-495.7942199707,
						-485.72830200195,
						-470.6540222168,
						-436.75540161133,
						-431.33047485352,
						-428.34265136719,
						-436.69732666016,
						-458.25354003906,
						-494.59771728516,
						-511.16033935547,
						-530.15368652344,
						-558.3505859375,
						-570.49206542969,
						-584.46417236328,
						-591.60034179688,
						-600.00463867188,
						-615.58117675781,
						-623.47918701172,
						-622.53985595703,
						-612.9052734375,
						-596.88275146484,
						-577.13690185547,
						-565.88836669922,
						-554.52465820313,
						-540.69793701172,
						-526.28704833984,
						-516.49279785156,
						-499.08285522461,
						-465.42330932617,
						-428.75158691406,
						-395.56427001953,
						-367.42425537109,
						-354.76538085938,
						-355.47998046875,
						-362.30282592773,
						-382.53634643555,
						-400.59631347656,
						-408.44430541992,
						-406.94479370117,
						-400.06317138672,
						-400.78268432617,
						-406.220703125,
						-398.74371337891,
						-383.05325317383,
						-371.29351806641,
						-350.95394897461,
						-325.49234008789,
						-295.66854858398,
						-276.78753662109,
						-264.86206054688,
						-262.21765136719,
						-269.3508605957,
						-236.46821594238,
						-202.74092102051,
						-162.96841430664,
						-153.46112060547,
						-143.41494750977,
						-142.3851776123
					},
					["y"] = 
					{
						63.023998260498,
						103.96868133545,
						136.2289276123,
						153.75765991211,
						160.30587768555,
						160.00149536133,
						175.02149963379,
						170.48629760742,
						163.99029541016,
						151.84515380859,
						134.56509399414,
						124.84162902832,
						124.18121337891,
						128.97744750977,
						138.57911682129,
						151.33856201172,
						186.09454345703,
						231.17991638184,
						256.03298950195,
						281.68609619141,
						292.97424316406,
						314.35287475586,
						330.13677978516,
						341.74917602539,
						350.53213500977,
						350.24765014648,
						341.52996826172,
						322.65200805664,
						304.93280029297,
						263.75689697266,
						211.96893310547,
						136.62405395508,
						50.477764129639,
						-52.990573883057,
						-80.705726623535,
						-112.33558654785,
						-124.20316314697,
						-126.77140808105,
						-122.16061401367,
						-111.50775146484,
						-86.774795532227,
						-48.503753662109,
						-16.25093460083,
						1.7907143831253,
						17.518260955811,
						18.909601211548,
						10.432137489319,
						-7.9164419174194,
						-37.134498596191,
						-54.975955963135,
						-74.39013671875,
						-98.199424743652,
						-125.34083557129,
						-149.28961181641,
						-162.70257568359,
						-186.85258483887,
						-210.64622497559,
						-242.0188293457,
						-264.29425048828,
						-284.58285522461,
						-293.93869018555,
						-298.91931152344,
						-296.10552978516,
						-279.77365112305,
						-258.47454833984,
						-233.52404785156,
						-215.02560424805,
						-152.56921386719,
						-64.480758666992,
						-9.4365043640137,
						14.491428375244,
						22.541366577148,
						42.932601928711,
						63.023998260498
					}
				}
			},
			["friction"] = 0.1,
			["restitution"] = 0.1
		},
		
		{
			["chain"] = 
			{
				["hasNextVertex"] = true,
				["hasPrevVertex"] = true,
				["nextVertex"] = 
				{
					["x"] = -146.34075927734,
					["y"] = -9.8450384140015
				},
				["prevVertex"] = 
				{
					["x"] = -199.0499420166,
					["y"] = -113.09696960449
				},
				["vertices"] = 
				{
					["x"] = 
					{
						-167.53541564941,
						-146.34075927734,
						-149.01229858398,
						-183.50996398926,
						-212.58619689941,
						-239.3850402832,
						-242.66969299316,
						-240.11375427246,
						-237.92730712891,
						-217.60144042969,
						-199.0499420166,
						-167.53541564941
				},
				["y"] = 
				{
						-58.5094871521,
						-9.8450384140015,
						-9.1507816314697,
						-42.934467315674,
						-85.732292175293,
						-150.09748840332,
						-169.80065917969,
						-195.3897857666,
						-196.77548217773,
						-148.11991882324,
						-113.09696960449,
						-58.5094871521
					}
				}
			},
			["friction"] = 0.2
		},
		
		{
			["chain"] = 
			{
				["hasNextVertex"] = true,
				["hasPrevVertex"] = true,
				["nextVertex"] = 
				{
					["x"] = -107.31702423096,
					["y"] = 108.20976257324
				},
				["prevVertex"] = 
				{
					["x"] = -110.01934814453,
					["y"] = -24.825769424438
				},
				["vertices"] = 
				{
					["x"] = 
					{
						-97.259307861328,
						-107.31702423096,
						-130.32606506348,
						-139.86726379395,
						-157.14768981934,
						-182.36126708984,
						-217.87864685059,
						-253.62162780762,
						-284.03610229492,
						-314.48901367188,
						-352.2060546875,
						-377.5256652832,
						-400.17013549805,
						-422.96273803711,
						-435.0947265625,
						-440.88424682617,
						-439.81024169922,
						-413.65606689453,
						-387.17929077148,
						-376.65255737305,
						-378.88919067383,
						-385.84588623047,
						-409.05029296875,
						-452.08935546875,
						-502.4228515625,
						-538.70104980469,
						-600.62512207031,
						-641.04132080078,
						-664.77545166016,
						-681.66137695313,
						-675.74609375,
						-679.88525390625,
						-683.83966064453,
						-681.02032470703,
						-670.42669677734,
						-640.96069335938,
						-600.02313232422,
						-552.68017578125,
						-526.04760742188,
						-501.52163696289,
						-487.54849243164,
						-479.60464477539,
						-469.68280029297,
						-450.2575378418,
						-433.74426269531,
						-416.20629882813,
						-409.7673034668,
						-415.69519042969,
						-439.13674926758,
						-443.59521484375,
						-435.89700317383,
						-433.25164794922,
						-437.8908996582,
						-433.99383544922,
						-422.30776977539,
						-407.73492431641,
						-382.59289550781,
						-354.52963256836,
						-326.05346679688,
						-292.31060791016,
						-244.18072509766,
						-201.96762084961,
						-173.17002868652,
						-152.0301361084,
						-131.31809997559,
						-110.01934814453,
						-97.259307861328
					},
					["y"] = 
					{
						35.299892425537,
						108.20976257324,
						163.51083374023,
						187.06442260742,
						197.90534973145,
						203.47686767578,
						203.28776550293,
						209.36019897461,
						227.13809204102,
						230.35289001465,
						223.2958984375,
						209.92300415039,
						192.16889953613,
						181.80070495605,
						183.55436706543,
						194.87022399902,
						210.52008056641,
						236.5281829834,
						274.91314697266,
						307.20370483398,
						330.5295715332,
						363.96420288086,
						391.46826171875,
						412.01235961914,
						416.20947265625,
						411.05062866211,
						382.34020996094,
						334.13610839844,
						292.19100952148,
						231.93511962891,
						144.55960083008,
						33.708499908447,
						-67.792587280273,
						-93.008377075195,
						-117.7776260376,
						-153.79774475098,
						-172.85302734375,
						-178.61514282227,
						-161.18356323242,
						-131.06764221191,
						-102.54916381836,
						-62.616870880127,
						-46.79594039917,
						-34.490005493164,
						-36.302925109863,
						-52.033424377441,
						-64.846168518066,
						-90.770584106445,
						-130.0902557373,
						-158.67469787598,
						-177.8727722168,
						-205.36029052734,
						-238.65187072754,
						-276.14315795898,
						-306.99960327148,
						-329.083984375,
						-343.53985595703,
						-345.62121582031,
						-340.97613525391,
						-326.80511474609,
						-289.46130371094,
						-236.78744506836,
						-174.53469848633,
						-120.59977722168,
						-77.920936584473,
						-24.825769424438,
						35.299892425537
					}
				}
			},
			["friction"] = 0.10000000149012,
			["restitution"] = 0.10000000149012
		},
		
		{
			["friction"] = 0.20000000298023,
			["name"] = "water",
			["polygon"] = 
			{
				["vertices"] = 
				{
					["x"] = 
					{
						-427.13275146484,
						-429.25357055664,
						-439.36294555664,
						-443.7805480957,
						-436.31414794922,
						-430.95010375977,
						-427.7336730957
					},
					["y"] = 
					{
						-132.07139587402,
						-112.7416229248,
						-130.06549072266,
						-158.58894348145,
						-178.20452880859,
						-169.27871704102,
						-153.89976501465
					}
				}
			},
			["sensor"] = true
		},
		
		{
			["friction"] = 0.20000000298023,
			["name"] = "water",
			["polygon"] = 
			{
				["vertices"] = 
				{
					["x"] = 
					{
						-399.71228027344,
						-403.42779541016,
						-412.46047973633,
						-415.84796142578,
						-415.30352783203,
						-405.94351196289,
						-400.3132019043
					},
					["y"] = 
					{
						-186.58460998535,
						-173.95252990723,
						-192.1501159668,
						-209.67774963379,
						-224.94773864746,
						-242.1263885498,
						-210.80500793457
					}
				}
			},
			["sensor"] = true
		},
	},
	["linearVelocity"] = 0,
	["position"] = 
	{
		["x"] = 0, --129.28131103516,
		["y"] = 0 ---25.299953460693
	},
	["type"] = 0 -- static
}

local waypoints = {
	0.000000000000, 38.794384002686,
	-20.66491317749, 183.3782043457,
	-69.061317443848, 268.08285522461,
	-282.30059814453, 292.61322021484,
	-377.3076171875, 269.16302490234,
	-423.72930908203, 238.46730041504,
	-481.44311523438, 233.9182434082,
	-518.56274414063, 257.55136108398,
	-531.68133544922, 287.02624511719,
	-521.322265625, 329.31677246094,
	-438.76818847656, 410.77841186523,
	-422.08947753906, 465.72625732422,
	-447.94769287109, 536.64910888672,
	-516.90417480469, 567.78137207031,
	-616.58331298828, 562.25109863281,
	-700.34545898438, 514.41510009766,
	-752.84564208984, 398.22702026367,
	-780.80548095703, 294.96459960938,
	-793.58557128906, -103.35818481445,
	-768.35931396484, -193.82841491699,
	-694.25, -235.16119384766,
	-610.22375488281, -196.29991149902,
	-566.80853271484, -77.466270446777,
	-504.42834472656, -12.865329742432,
	-428.54272460938, -19.404008865356,
	-388.43618774414, -67.618698120117,
	-422.95462036133, -155.46005249023,
	-427.04278564453, -439.01675415039,
	-393.93746948242, -472.63507080078,
	-291.34283447266, -471.22344970703,
	-173.01641845703, -358.70739746094,
}

function Track:new(world)
	local track = {}

	local x_offset = 120
	local y_offset = -30

	track.body = love.physics.newBody(world, 0, track_data.position.y, "static")
	track.shapes = {}
	track.fixtures = {}
	for _, fixture in ipairs(track_data.fixture) do
		if fixture.chain ~= nil then
			local points = {}
			for i = 1, #fixture.chain.vertices.x do
				points[#points + 1] = (fixture.chain.vertices.x[i] + x_offset) * 1.5
				points[#points + 1] = (fixture.chain.vertices.y[i] + y_offset) * 1.5
			end
			local shape = love.physics.newChainShape(false, points)
			shape:setNextVertex((fixture.chain.nextVertex.x + x_offset) * 1.5, (fixture.chain.nextVertex.y + y_offset) * 1.5)
			shape:setPreviousVertex((fixture.chain.prevVertex.x + x_offset) * 1.5, (fixture.chain.prevVertex.y + y_offset) * 1.5)
			track.shapes[#track.shapes + 1] = shape

			local f = love.physics.newFixture(track.body, shape, 1.0)
			f:setUserData(true)
			--if fixture.chain.friction then f:setFriction(fixture.chain.friction) end
			f:setFriction(0.75)
			if fixture.chain.restitution then f:set(fixture.chain.restitution) end
			track.fixtures[#track.fixtures + 1] = f
		end
	end
	

	setmetatable(track, self)
	self.__index = self

	return track
end

function Track:destroy()
	for _, fixture in ipairs(self.fixtures) do
		fixture:setUserData(nil)
		fixture:destroy()
	end
	self.fixtures = nil
	self.body:destroy()
	self.body = nil
end

function Track:draw()
	love.graphics.setColor(0, 255, 0)
	for _, shape in ipairs(self.shapes) do
		local points = {shape:getPoints()}
		for i = 1, #points, 2 do
			local x, y = self.body:getWorldPoint(points[i], points[i + 1])
			points[i] = x  * scale
			points[i + 1] = y * scale
		end
		love.graphics.line(points)
	end

	--local points = {}
	--for i = 1, #waypoints, 2 do
	--	points[i] = waypoints[i] * scale
	--	points[i + 1] = waypoints[i + 1] * scale
	--end
	--points[#points + 1] = points[1]
	--points[#points + 1] = points[2]
	--love.graphics.line(points)

end

-- function Track:castRayAgainst(x1, y1, x2, y2, maxFraction)
-- 	for _, fixture in ipairs(self.fixtures) do
-- 		--print"attempt"
-- 		local xn, yn, fraction = fixture:rayCast(x1, y1, x2, y2, maxFraction, 1)
-- 		if xn ~= nil then
-- 			print(xn, yn, fraction)
-- 			return x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction
-- 			--break
-- 		end
-- 	end
-- 	return nil
-- end
-- 
-- function Track:startMonitoring(x, y)
-- 	nextWaypoint = 1
-- 	prevLoc = Vector(x, y)
-- end
-- 
-- function Track:monitor(x, y)
-- 	local wp = Vector(waypoints[nextWaypoint * 2 - 1] * scale, waypoints[nextWaypoint * 2] * scale)
-- 	love.graphics.points(wp.x, wp.y)
-- 	love.graphics.points(prevLoc.x, prevLoc.y)
-- 
-- 	local prevDist = prevLoc:distance(wp)
-- 	prevLoc = Vector(x,y)
-- 	local curDist = prevLoc:distance(wp)
-- 
-- 	if curDist <= prevDist then
-- 		-- Yay: we are getting closer
-- 		--return "getting closer"
-- 	else
-- 		-- We've gotten further away, see if we are closer
-- 		-- to the next waypoint or previous 
-- 		local wpNext = Vector(waypoints[(nextWaypoint + 1) * 2 - 1] * scale, waypoints[(nextWaypoint + 1) * 2] * scale)
-- 		love.graphics.points(wpNext.x, wpNext.y)
-- 		local nextDist = prevLoc:distance(wpNext)
-- 		if nextDist <= wp:distance(wpNext) then
-- 			nextWaypoint = nextWaypoint + 1
-- 			print "moving to next waypoint"
-- 		else
-- 			print "going backwards"
-- 		end
-- 	end
-- end

return Track
